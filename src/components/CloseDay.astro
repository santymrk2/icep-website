---
import { Client } from '@notionhq/client';

import { NOTION_API_KEY, DATABASE_ID, getSecret} from 'astro:env/server';

console.log(NOTION_API_KEY, DATABASE_ID)

const fechaActual = new Date();
const fechaISO = fechaActual.toISOString().split('T')[0];
let notionPages
let pageType
let pageDate
let pageLink
let backColor

const notion = new Client({ auth: NOTION_API_KEY });

try{
  notionPages = await notion.databases.query({ 
    database_id: DATABASE_ID,
    filter: {
      property: "Fecha",
      date: {
        on_or_after: fechaISO ,
      }
    },
    sorts: [
        {
          property: "Fecha",
          direction: "ascending"
        }
      ],
  });

  if (notionPages.results.length > 0) {
    const type = notionPages.results[0].properties['Tipo de Reunión'].select?.name;

    pageType = type.toUpperCase();

    const fechaStr = notionPages.results[0].properties['Fecha'].date?.start;

    if (fechaStr) {
      // Crear una nueva fecha a partir de la cadena ISO
      const fecha = new Date(fechaStr);
      console.log(fechaStr)

      // Obtener los componentes de la fecha
      const opciones = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
      const diaSemana = fecha.toLocaleDateString('es-AR', opciones).split(',')[0];
      const dia = fecha.getDate();
      const mes = fecha.toLocaleDateString('es-AR', { month: 'long' });

      
      const dateParts = fechaStr.split("T")[1].split(":");
      const originalHour = dateParts[0]; 
      const originalMinutes = dateParts[1];

      // Asegurar formato de dos dígitos (aunque ya lo tiene aquí)
      const horas = originalHour.padStart(2, '0');
      const minutos = originalMinutes.padStart(2, '0');


      // Formatear la cadena de salida
      const date = `El ${diaSemana} ${dia} de ${mes} a las ${horas}:${minutos}hs`;
      console.log(date)
      pageDate = date;    
    }

    // Comprobar si existe el enlace y mostrarlo
    const mensajeEnYouTube = notionPages.results[0].properties['Mensaje en YouTube']?.url;
    if (mensajeEnYouTube) {
      console.log(`Enlace a YouTube: ${mensajeEnYouTube}`);
    }
  } else {
    console.log('No se encontraron datos.');
  }
} catch (error) {
  // Maneja el error aquí.
  if (error.code === 'unauthorized') {
    console.error('Error: No tienes acceso al recurso especificado. Revisa tus credenciales y permisos.');
  } else {
    console.error('Error al consultar Notion:', error.message);
  }
}

export const prerender = true;
---

<div class="flex flex-col justify-center items-center p-8 m-8 gap-6 mx-4 sm:mx-10 text-white">
  {notionPages ? (
    <h2 class="text-2xl font-bold text-center ">Nuestro próximo encuentro es:</h2>
    <div class={`
      animate-[float3d_6s_ease-in-out_infinite]
        ring ring-4 
        ${pageType === 'ACTIVADOS' ? 'ring-green-500 shadow-green-500/60' : ''}
        ${pageType === 'MINISTERIO' ? 'ring-blue-500 shadow-blue-500/60' : ''}
        ${pageType === 'ORACIÓN' ? 'ring-orange-500 shadow-orange-500/60' : ''}
        ${pageType === 'JÓVENES' ? 'ring-purple-500 shadow-purple-500/60' : ''}
        ${pageType === 'MUJERES' ? 'ring-rose-500 shadow-rose-500/60' : ''}
        ${pageType === 'MATRIMONIOS' ? 'ring-red-500 shadow-red-500/60' : ''}
        ${!['ACTIVADOS', 'MINISTERIO', 'ORACIÓN', 'JÓVENES', 'MUJERES', 'MATRIMONIOS'].includes(pageType) ? 'ring-custom-blue shadow-custom-blue/60' : ''}
        shadow-xl rounded-full md:p-2
      `}>
        <h1 class="text-5xl p-6 sm:text-7xl font-bold text-center">{pageType}</h1>
      </div>
    <p class="text-center">{pageDate}</p>
  ) : console.log("No se encuentran datos")
  }
  {pageLink ? (
    <button class="">{pageLink}</button>
  ) : null}
</div>