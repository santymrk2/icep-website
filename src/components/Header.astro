---
const menuItems = [
  {
    text: "Inicio",
    href: "/",
    subitems: undefined 
  },
  {
    text: "Nosotros",
    href: "/nosotros",
    subitems: [
      { text: "Historia", href: "/historia" },
      { text: "Declaracion de Fe", href: "/declaracion" },
      /*
      { text: "Hermanos Responsables", href: "/responsables" },
       */
      { text: "Prologo al libro", href: "/prologo" },
      /*
      {
        text: "Actividades en orden cronologico",
        href: "/actividades-cronologico",
      },*/
    ],
  },
  {
    text: "Ministerios",
    href: "/ministerios",
    subitems: [
      { text: "Niños", href: "/ninios" },
      { text: "Adolescentes", href: "/adolescentes" },
      { text: "Jovenes", href: "/jovenes" },
      { text: "Mujeres", href: "/mujeres" },
      { text: "Matrimonios", href: "/matrimonios" },
    ],
  },
  {
    text: "Instituto Bíblico",
    href: "/instituto",
    subitems: undefined 
  },
  {
    text: "Calendario",
    href: "https://iglesia-pilar.notion.site/b19a403082ee49238154f16433dd7925?v=7851ff6a1d2c403da600451c9e99c129&pvs=74",
    subitems: undefined,
  },
  { 
    text: "Contacto",
    href: "/contacto",
    subitems: undefined 
  },
];

import { Image } from "astro:assets";
import logoImage from "../assets/Black.png";
import {
  Astronav,
  MenuItems,
  Dropdown,
  DropdownItems,
} from "astro-navbar";

export const prerender = false;
---

<header transition:persist class="h-24 text-white m-4 sm:m-10 shadow-custom-blue rounded-full bg-custom-blue" id="back-menu">
  <div class="max-w-7xl mx-auto px-6 sm:px-8 lg:px-10 flex h-full text-base font-normal">
    <div class="flex justify-between items-center w-full">
      <div class="flex items-center motion-preset-expand p-4">
        <a href="/" class="flex items-center">
          <svg
            class="h-16 fill-white"
            viewBox="0 0 800 800"
            ><defs></defs><path
              d="M400 331.69c28.41-20.36 63.23-32.34 100.85-32.34 25.46 0 49.64 5.49 71.42 15.35.71-6.37 1.09-12.84 1.09-19.4 0-95.74-77.61-173.35-173.35-173.35S226.66 199.56 226.66 295.3c0 6.56.38 13.03 1.09 19.4 21.78-9.86 45.96-15.35 71.42-15.35 37.62 0 72.43 11.99 100.85 32.34Z"
              class="cls-1"></path><path
              d="M572.27 314.7c-6.89 61.88-46.34 113.93-100.85 138.6.71 6.37 1.09 12.84 1.09 19.4 0 58.12-28.61 109.56-72.51 141.01 28.41 20.36 63.23 32.34 100.85 32.34 95.74 0 173.35-77.61 173.35-173.35 0-70.28-41.82-130.79-101.93-158Z"
              class="cls-1"></path><path
              d="M327.49 472.7c0-6.56.38-13.03 1.09-19.4-54.5-24.67-93.95-76.72-100.85-138.6-60.11 27.21-101.93 87.72-101.93 158 0 95.74 77.61 173.35 173.35 173.35 37.62 0 72.43-11.99 100.85-32.34-43.9-31.45-72.51-82.89-72.51-141.01ZM400 331.69c-38.94 27.9-65.84 71.54-71.42 121.61 21.78 9.86 45.96 15.35 71.42 15.35s49.64-5.49 71.42-15.35c-5.58-50.07-32.48-93.71-71.42-121.61Z"
              class="cls-1"></path>
          </svg>
        </a>
      </div>
      <div class="hidden xl:flex space-x-8 justify-center items-center m-2 ">
        <Astronav closeOnClick>
          <MenuItems class="flex space-x-4 g-4">
            {
              menuItems.map((item, index) =>
                item.subitems === undefined ? (
                  <a
                    href={item.href}
                    class={`ring ring-2 ring-white rounded-full px-4 py-2 hover:bg-white hover:text-custom-blue transition-all easy-in-out motion-preset-expand`}
                  >
                    {item.text}
                  </a>
                ) : (
                  <Dropdown class="relative">
                    <button class="flex items-center transition-all easy-in-out space-x-1 motion-preset-expand px-4 py-2 ring ring-2 ring-white rounded-full hover:bg-white hover:text-custom-blue">
                      <span>{item.text}</span>
                      <svg
                        class="h-5 w-5 transform transition-transform duration-200"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M19 9l-7 7-7-7"
                        />
                      </svg>
                    </button>
                    <DropdownItems class={`absolute top-16 -left-2 m-2 bg-custom-blue shadow-lg p-4 px-6 z-10 hidden group-hover:block rounded-[2rem] motion-scale-in-[0.42] motion-translate-x-in-[2%] motion-translate-y-in-[-30%] motion-opacity-in-[0%]`}>
                      <div class="flex flex-col items-center w-[12rem]">
                        {Array.isArray(item.subitems) &&
                        item.subitems.map(
                          (subitem: { text: string; href: string }) => (
                            <a
                              href={subitem.href}
                              class="inline-block w-full text-white text-center ring ring-2 ring-white rounded-full px-4 py-2 my-2 hover:bg-white hover:text-custom-blue transition-all easy-in-out motion-preset-expand"
                            >
                              {subitem.text}
                            </a>
                          ),
                        )}
                      </div>

                    </DropdownItems>
                  </Dropdown>
                ),
              )
            }
          </MenuItems>
        </Astronav>
      </div>

      <button class="xl:hidden p-2" id="mobile-menu-button">
        <svg
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile menu -->
  <div class="hidden xl:hidden text-white flex flex-col justify-center" id="mobile-menu">
    <div class="gap-5 p-6 flex flex-col items-center">
      {
        menuItems.map((item) =>
          item.subitems === undefined ? (
            <a
              href={item.href}
              class="inline-block text-center px-2 py-1 text-normal w-8/12 sm:w-4/12 hover:text-custom-blue hover:bg-white rounded-full ring ring-2 ring-white"
            >
              {item.text}
            </a>
          ) : (
            <Dropdown class="flex flex-col justify-center w-8/12 sm:w-4/12 ">
              <button class="block rounded-full text-medium px-2 py-1 text-center flex flex-row justify-center items-center hover:text-custom-blue hover:bg-white  ring ring-2 ring-white">
                <span>{item.text}</span>
                <svg
                  class="h-5 w-5 transform transition-transform duration-200"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M19 9l-7 7-7-7"
                  />
                </svg>
              </button>
              <DropdownItems class="mt-2 space-y-3 bg-white shadow-lg rounded-[1.5rem] p-4 mb-2 z-10 hidden group-hover:block flex flex-col justify-center motion-scale-in-[0.42] motion-translate-x-in-[2%] motion-translate-y-in-[-30%] motion-opacity-in-[0%]" >
                {Array.isArray(item.subitems) &&
                  item.subitems.map(
                    (subitem: { text: string; href: string }) => (
                      <a
                        href={subitem.href}
                        class="block text-center text-normal mx-2 px-2 py-1 ring ring-2 ring-custom-blue rounded-full text-custom-blue hover:bg-custom-blue hover:text-white transition-all easy-in-out motion-preset-expand"
                      >
                        {subitem.text}
                      </a>
                    ),
                  )}
              </DropdownItems>
            </Dropdown>
          ),
        )
      }
    </div>
  </div>
</header>

<script>
  const back = document.getElementById("back-menu");

  const button = document.getElementById("mobile-menu-button");
  const menu = document.getElementById("mobile-menu");

  button?.addEventListener("click", () => {
    menu?.classList.toggle("hidden");
    back?.classList.toggle("rounded-xl");
    back?.classList.toggle("transition-opacity");
    back?.classList.toggle("h-auto");
  });
</script>
